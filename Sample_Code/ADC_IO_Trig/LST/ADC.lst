C51 COMPILER V9.53.0.0   ADC                                                               02/20/2018 14:50:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Output\ADC.obj
COMPILER INVOKED BY: E:\Soft\keil472a\C51\BIN\C51.EXE Code\ADC.C BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBUG 
                    -OBJECTEXTEND PRINT(.\LST\ADC.lst) OBJECT(.\Output\ADC.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E885 ADC demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include <stdio.h>
  19          #include "N76E003.h"
  20          #include "Common.h"
  21          #include "Delay.h"
  22          #include "SFR_Macro.h"
  23          #include "Function_Define.h"
  24          
  25          
  26          
  27          //*****************  The Following is in define in Fucntion_define.h  ***************************
  28          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  29          //***********************************************************************************************
  30          #if 0
              //#define Enable_ADC_AIN0                       ADCCON0&=0xF0;P17_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT0;ADCCON1|=SET_BIT0   
             -                                                                //P17
              //#define Enable_ADC_AIN1                       ADCCON0&=0xF0;ADCCON0|=0x01;P30_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT1;ADCC
             -ON1|=SET_BIT0                //P30
              //#define Enable_ADC_AIN2                       ADCCON0&=0xF0;ADCCON0|=0x02;P07_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT2;ADCC
             -ON1|=SET_BIT0                //P07
              //#define Enable_ADC_AIN3                       ADCCON0&=0xF0;ADCCON0|=0x03;P06_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT3;ADCC
             -ON1|=SET_BIT0                //P06
              //#define Enable_ADC_AIN4                       ADCCON0&=0xF0;ADCCON0|=0x04;P05_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT4;ADCC
             -ON1|=SET_BIT0                //P05
              //#define Enable_ADC_AIN5                       ADCCON0&=0xF0;ADCCON0|=0x05;P04_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT5;ADCC
             -ON1|=SET_BIT0                //P04
              //#define Enable_ADC_AIN6                       ADCCON0&=0xF0;ADCCON0|=0x06;P03_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT6;ADCC
             -ON1|=SET_BIT0                //P03
              //#define Enable_ADC_AIN7                       ADCCON0&=0xF0;ADCCON0|=0x07;P11_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT7;ADCC
C51 COMPILER V9.53.0.0   ADC                                                               02/20/2018 14:50:36 PAGE 2   

             -ON1|=SET_BIT0                //P11
              //#define Enable_ADC_BandGap    ADCCON0|=0x0F;ADCCON1|=SET_BIT0                                                                                                                                                                                                                                                         //Band-gap 1.2
             -2V
              
              //#define PWM0_FALLINGEDGE_TRIG_ADC             ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SE
             -T_BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_FALLINGEDGE_TRIG_ADC             ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM4_FALLINGEDGE_TRIG_ADC             ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM0_RISINGEDGE_TRIG_ADC              ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_
             -BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_RISINGEDGE_TRIG_ADC              ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              //#define PWM4_RISINGEDGE_TRIG_ADC              ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              
              //#define P04_FALLINGEDGE_TRIG_ADC              ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1&=~SET_BIT6
              //#define P13_FALLINGEDGE_TRIG_ADC              ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1|=SET_BIT6
              //#define P04_RISINGEDGE_TRIG_ADC                       ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1&=~SET_BIT6
              //#define P13_RISINGEDGE_TRIG_ADC                       ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1|=SET_BIT6
              #endif
  53          
  54          /******************************************************************************
  55           * FUNCTION_PURPOSE: ADC interrupt Service Routine
  56           ******************************************************************************/
  57          void ADC_ISR (void) interrupt 11
  58          {
  59   1          clr_ADCF;                               //clear ADC interrupt flag
  60   1                      Send_Data_To_UART0(ADCRH);
  61   1          Send_Data_To_UART0(ADCRL);
  62   1      }
  63          
  64          /******************************************************************************
  65          The main C function.  Program execution starts
  66          here after stack initialization.
  67          ******************************************************************************/
  68          void main (void) 
  69          {
  70   1          uint32_t aaa;
  71   1          Set_All_GPIO_Quasi_Mode;
  72   1              //set_P01;
  73   1                      InitialUART0_Timer3(115200);
  74   1      /*---------------------------------------------------------------
  75   1              ADC port trig initial setting toggle P0.4 to start ADC 
  76   1      ----------------------------------------------------------------*/
  77   1                      Enable_ADC_AIN4;                                                                                                                        // Enable AIN0 P1.7 as ADC pin
  78   1                      P13_FALLINGEDGE_TRIG_ADC;                                                                                       // P0.4 falling edge as adc start trig signal
  79   1      // Find ADC result in ADC interrupt
  80   1          set_EADC;                                                                                                                                                   // Enable ADC interrupt (if use interrupt)
  81   1                      EA = 1;                                                                                                                                                         // Enable global interrupt
  82   1                                                                                                                                                                      // Trig P04 falling edge to start adc, no need set ADCS bit
  83   1                      while(1)
  84   1              {
  85   2                  set_ADCS;
  86   2                  aaa=0xffff;
  87   2                  while(aaa--);
  88   2              }            // Wait ADC interrupt
  89   1      
  90   1      }
C51 COMPILER V9.53.0.0   ADC                                                               02/20/2018 14:50:36 PAGE 3   

  91          
  92          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    155    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
